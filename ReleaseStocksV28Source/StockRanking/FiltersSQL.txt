insert into filter (id_stock, date, close_price, CLOSE_PRICE_1JAN, currency_ratio, debt_to_ebit, mkt_cap, positive_ebit_years, volume, AVG_VOLUME, SHAREHOLDERS_YIELD, BUY_BACK_RATE, DEBT_REDUCTION, QOQ_EARNINGS, EV_EBITDA, EPS, SPS, BVPS, FCFPS, PE, PS, PB, PFCF, PE_VAL, PS_VAL, PB_VAL, FCFPS_VAL )
SELECT 
    BASE.ID_STOCK,
	BASE.DATE,
	(SELECT PRICE.CLOSE_PRICE FROM PRICE WHERE PRICE.ID_STOCK = BASE.ID_STOCK AND PRICE.DATE = BASE.DATE) CLOSE_PRICE,

	(SELECT IFNULL(PRICE.CLOSE_PRICE, 0) FROM PRICE WHERE PRICE.ID_STOCK = BASE.ID_STOCK AND PRICE.DATE = SUBSTR(BASE.DATE, 1, 4) || '0101' ) CLOSE_PRICE_1JAN,

	RATIO.CURR_RATIO,
	
	CASE WHEN RATIO.EBIT = 0 THEN NULL ELSE cast(RATIO.TOT_LTERM_DEBT as double) / cast(RATIO.EBIT as double) END DEBT_TO_EBIT,
	
    (SELECT PRICE.CLOSE_PRICE FROM PRICE WHERE PRICE.ID_STOCK = BASE.ID_STOCK AND PRICE.DATE = BASE.DATE)*RATIO.SHARES_OUT MKT_CAP,

	(SELECT COUNT(*) FROM RATIO R1 WHERE R1.ID_STOCK = BASE.ID_STOCK AND R1.DATA_RANGE = 'ARY' AND 
		DATE > (SELECT IFNULL(MAX(R2.DATE), 0) FROM RATIO R2 WHERE R2.ID_STOCK = R1.ID_STOCK 
		AND R2.DATA_RANGE = 'ARY' AND EBIT <= 0 AND R2.DATE < RATIO.DATE_FIRST_MONTH)
		AND R1.DATE < RATIO.DATE_FIRST_MONTH) POSITIVE_EBIT_YEARS,

	(SELECT PRICE.VOLUME FROM PRICE WHERE PRICE.ID_STOCK = BASE.ID_STOCK AND PRICE.DATE = BASE.DATE) VOLUME,

	(SELECT PRICE.AVG_20DAYS_VOLUME FROM PRICE WHERE PRICE.ID_STOCK = BASE.ID_STOCK AND PRICE.DATE = BASE.DATE) AVG_VOLUME,
	
	CAST(RATIO.DIVIDEND_YIELD*100 as double) SHAREHOLDERS_YIELD,
	
	(SELECT
		CASE WHEN R2.SHARES_OUT = 0 OR R2.SHARES_OUT < RATIO.SHARES_OUT THEN 0 
 		ELSE (cast(RATIO.SHARES_OUT as double) - cast(R2.SHARES_OUT as double)) / -cast(R2.SHARES_OUT as double) * cast(100 as double) END
		FROM RATIO R2 WHERE R2.ID_STOCK = BASE.ID_STOCK AND R2.YEAR = RATIO.YEAR-1 AND R2.QUARTER = RATIO.QUARTER AND R2.DATA_RANGE = 'ARQ') BUY_BACK_RATE,

	(SELECT
		CASE WHEN R2.TOT_LTERM_DEBT = 0 OR R2.TOT_LTERM_DEBT < RATIO.TOT_LTERM_DEBT THEN 0 
 		ELSE (cast(RATIO.TOT_LTERM_DEBT as double) - cast(R2.TOT_LTERM_DEBT as double)) / -cast(R2.TOT_LTERM_DEBT as double) * cast(100 as double) END
		FROM RATIO R2 WHERE R2.ID_STOCK = BASE.ID_STOCK AND R2.YEAR = RATIO.YEAR-1 AND R2.QUARTER = RATIO.QUARTER AND R2.DATA_RANGE = 'ARQ') DEBT_REDUCTION,

	(SELECT
		CASE WHEN R2.EBIT = 0 OR R2.EBIT < RATIO.EBIT THEN 0 
 		ELSE (cast(RATIO.EBIT as double) - cast(R2.EBIT as double)) / -cast(R2.EBIT as double) * cast(100 as double) END
		FROM RATIO R2 WHERE R2.ID_STOCK = BASE.ID_STOCK AND
			((R2.YEAR = RATIO.YEAR AND R2.QUARTER = RATIO.QUARTER-3 AND RATIO.QUARTER > 3)
			OR (R2.YEAR = RATIO.YEAR-1 AND R2.QUARTER = 12 AND RATIO.QUARTER = 3)
			OR (R2.YEAR = RATIO.YEAR-1 AND R2.QUARTER = 11 AND RATIO.QUARTER = 2)
			OR (R2.YEAR = RATIO.YEAR-1 AND R2.QUARTER = 10 AND RATIO.QUARTER = 1))
			AND R2.DATA_RANGE = 'ARQ') QOQ_EARNINGS,

	CASE WHEN CAST(RATIO.EBIT AS DOUBLE) = 0 THEN 0 ELSE
		CAST(RATIO.EV AS DOUBLE) / CAST(RATIO.EBIT AS DOUBLE) END EV_EBITDA,

	RATIO.EPS,
	RATIO.SPS,
	RATIO.BVPS,
	RATIO.FCFPS,

	RATIO.EPS * (SELECT MEDIAN(PE)
	FROM RATIO R1
	WHERE R1.ID_STOCK = RATIO.ID_STOCK AND R1.DATA_RANGE = 'ARQ' AND R1.DATE <= RATIO.DATE
		AND R1.DATE >= RATIO.DATE - ##YEARSVAR##) PE,

	RATIO.SPS * (SELECT MEDIAN(PS)
	FROM RATIO R1
	WHERE R1.ID_STOCK = RATIO.ID_STOCK AND R1.DATA_RANGE = 'ARQ' AND R1.DATE <= RATIO.DATE
		AND R1.DATE >= RATIO.DATE - ##YEARSVAR##) PS,
	
	RATIO.BVPS * (SELECT MEDIAN(PB)
	FROM RATIO R1
	WHERE R1.ID_STOCK = RATIO.ID_STOCK AND R1.DATA_RANGE = 'ARQ' AND R1.DATE <= RATIO.DATE
		AND R1.DATE >= RATIO.DATE - ##YEARSVAR##) PB,
	
	RATIO.FCFPS * (SELECT MEDIAN(R1.STOCK_PRICE / R1.FCFPS)
	FROM RATIO R1
	WHERE R1.ID_STOCK = RATIO.ID_STOCK AND R1.DATA_RANGE = 'ARQ' AND R1.DATE <= RATIO.DATE AND R1.FCFPS != 0
		AND R1.DATE >= RATIO.DATE - ##YEARSVAR##) FCFPS,

	RATIO.PE,
	RATIO.PS,
	RATIO.PB,
	CASE WHEN RATIO.FCFPS = 0 THEN 0 ELSE
		RATIO.STOCK_PRICE / RATIO.FCFPS END FCFPS_VAL


FROM (
SELECT DISTINCT DATE, ID_STOCK
FROM FEATURE WHERE ID_STOCK BETWEEN ##BETWEEN## ##DATEFILTER##
) BASE,
RATIO
WHERE  RATIO.ID_STOCK = BASE.ID_STOCK AND BASE.DATE = RATIO.DATE_FIRST_MONTH
AND RATIO.DATA_RANGE = 'ARQ'
AND RATIO.ID_STOCK BETWEEN ##BETWEEN##